{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABET","SORT_LENGTH","App","useState","orderMethod","setOrderMethod","isReversed","setIsReversed","orderedGoods","goods","orderedMethod","finalGoods","sort","good1","good2","localeCompare","length","reverse","getOrderedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAgB,WAChBC,EAAc,SAyBb,IAAMC,EAAM,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAAyBC,EAAOC,EAAeJ,GAC7C,IAAMK,EAAU,YAAOF,GAEvB,OAAQC,GACN,KAAKV,EACHW,EAAWC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACtD,MAEF,KAAKb,EACHU,EAAWC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAW3D,OAJIV,GACFK,EAAWM,UAGNN,EAMcO,CACnBnB,EACAK,EACAE,GAGF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAgBJ,IAE9BsB,QAAS,kBAAMjB,EAAeL,IALhC,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAgBH,IAE9BqB,QAAS,kBAAMjB,EAAeJ,IALhC,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaf,IAEfgB,QAAS,kBAAMf,GAAeD,IALhC,sBAUEF,GAAeE,IACf,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAe,IAAKE,GAAc,IAJtC,sBAYJ,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e59cbfea.chunk.js","sourcesContent":["import cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABET = 'alphabet';\nconst SORT_LENGTH = 'length';\n\nfunction getOrderedGoods(goods, orderedMethod, isReversed) {\n  const finalGoods = [...goods];\n\n  switch (orderedMethod) {\n    case SORT_ALPHABET:\n      finalGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SORT_LENGTH:\n      finalGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    finalGoods.reverse();\n  }\n\n  return finalGoods;\n}\n\nexport const App = () => {\n  const [orderMethod, setOrderMethod] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const orderedGoods = getOrderedGoods(\n    goodsFromServer,\n    orderMethod,\n    isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': orderMethod !== SORT_ALPHABET,\n          })}\n          onClick={() => setOrderMethod(SORT_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': orderMethod !== SORT_LENGTH,\n          })}\n          onClick={() => setOrderMethod(SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(orderMethod || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setOrderMethod(''); setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {orderedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}